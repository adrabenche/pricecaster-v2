{"version":3,"file":"WormholePythPriceFetcher.js","sourceRoot":"","sources":["../../backend/fetcher/WormholePythPriceFetcher.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\r\n/**\r\n * Pricecaster Service.\r\n *\r\n * Fetcher backend component.\r\n *\r\n * Copyright 2022 Wormhole Project Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport {\r\n  importCoreWasm,\r\n  setDefaultWasm\r\n} from '@certusone/wormhole-sdk/lib/cjs/solana/wasm'\r\nimport {\r\n  createSpyRPCServiceClient, subscribeSignedVAA\r\n} from '@certusone/wormhole-spydk'\r\nimport { SpyRPCServiceClient } from '@certusone/wormhole-spydk/lib/cjs/proto/spy/v1/spy'\r\nimport { PythAttestation, PythData, VAA } from 'backend/common/basetypes'\r\nimport { IStrategy } from '../strategy/strategy'\r\nimport { IPriceFetcher } from './IPriceFetcher'\r\nimport * as Logger from '@randlabs/js-logger'\r\nimport { PythSymbolInfo } from 'backend/engine/SymbolInfo'\r\nimport { base58 } from 'ethers/lib/utils'\r\nconst { extract3 } = require('../../tools/app-tools')\r\n\r\nexport class WormholePythPriceFetcher implements IPriceFetcher {\r\n  private client: SpyRPCServiceClient\r\n  private pythEmitterAddress: { s: string, data: number[] }\r\n  private pythChainId: number\r\n  private stream: any\r\n  private _hasData: boolean\r\n  private coreWasm: any\r\n  private data: PythData | undefined\r\n  private symbolInfo: PythSymbolInfo\r\n  constructor (spyRpcServiceHost: string, pythChainId: number, pythEmitterAddress: string, symbolInfo: PythSymbolInfo) {\r\n    setDefaultWasm('node')\r\n    this._hasData = false\r\n    this.client = createSpyRPCServiceClient(spyRpcServiceHost)\r\n    this.pythChainId = pythChainId\r\n    this.symbolInfo = symbolInfo\r\n    this.pythEmitterAddress = {\r\n      data: Buffer.from(pythEmitterAddress, 'hex').toJSON().data,\r\n      s: pythEmitterAddress\r\n    }\r\n  }\r\n\r\n  async start () {\r\n    this.coreWasm = await importCoreWasm()\r\n    // eslint-disable-next-line camelcase\r\n    this.stream = await subscribeSignedVAA(this.client,\r\n      {\r\n        filters:\r\n          [{\r\n            emitterFilter: {\r\n              chainId: this.pythChainId,\r\n              emitterAddress: this.pythEmitterAddress.s\r\n            }\r\n          }]\r\n      })\r\n\r\n    this.stream.on('data', (data: { vaaBytes: Buffer }) => {\r\n      try {\r\n        this.onPythData(data.vaaBytes)\r\n      } catch (e) {\r\n        Logger.error(`Failed to parse VAA data. \\nReason: ${e}\\nData: ${data}`)\r\n      }\r\n    })\r\n\r\n    this.stream.on('error', (e: Error) => {\r\n      Logger.error('Stream error: ' + e)\r\n    })\r\n  }\r\n\r\n  stop (): void {\r\n    this._hasData = false\r\n  }\r\n\r\n  setStrategy (s: IStrategy) {\r\n  }\r\n\r\n  hasData (): boolean {\r\n    // Return when any price is ready\r\n    return this._hasData\r\n  }\r\n\r\n  queryData (id?: string): any | undefined {\r\n    const data = this.data\r\n    this.data = undefined\r\n    return data\r\n  }\r\n\r\n  private async onPythData (vaaBytes: Buffer) {\r\n    // console.log(vaaBytes.toString('hex'))\r\n    const v: VAA = this.coreWasm.parse_vaa(new Uint8Array(vaaBytes))\r\n    const payload = Buffer.from(v.payload)\r\n    const header = payload.readInt32BE(0)\r\n    const version = payload.readInt16BE(4)\r\n\r\n    if (header === 0x50325748) {\r\n      if (version === 2) {\r\n        const payloadId = payload.readUInt8(6)\r\n        if (payloadId === 2) {\r\n          const numAttest = payload.readInt16BE(7)\r\n          const sizeAttest = payload.readInt16BE(9)\r\n\r\n          //\r\n          // Extract attestations for VAA body\r\n          //\r\n          const attestations: PythAttestation[] = []\r\n          for (let i = 0; i < numAttest; ++i) {\r\n            const attestation = extract3(payload, 11 + (i * sizeAttest), sizeAttest)\r\n            // console.log(i, attestation.toString('hex'))\r\n\r\n            const productId = extract3(attestation, 7, 32)\r\n            const priceId = extract3(attestation, 7 + 32, 32)\r\n\r\n            // console.log(base58.encode(productId))\r\n            // console.log(base58.encode(priceId))\r\n            const pythAttest: PythAttestation = {\r\n              symbol: this.symbolInfo.getSymbol(base58.encode(productId), base58.encode(priceId)),\r\n              productId,\r\n              priceId,\r\n              price_type: attestation.readInt8(71),\r\n              price: attestation.readBigUInt64BE(72),\r\n              exponent: attestation.readInt32BE(80),\r\n              twap: attestation.readBigUInt64BE(84),\r\n              twap_num_upd: attestation.readBigUInt64BE(92),\r\n              twap_denom_upd: attestation.readBigUInt64BE(100),\r\n              twac: attestation.readBigUInt64BE(108),\r\n              twac_num_upd: attestation.readBigUInt64BE(116),\r\n              twac_denom_upd: attestation.readBigUInt64BE(124),\r\n              confidence: attestation.readBigUInt64BE(132),\r\n              status: attestation.readInt8(140),\r\n              corporate_act: attestation.readInt8(141),\r\n              timestamp: attestation.readBigUInt64BE(142)\r\n            }\r\n\r\n            attestations.push(pythAttest)\r\n          }\r\n          this.data = {\r\n            vaaBody: vaaBytes.slice(6 + v.signatures.length * 66),\r\n            signatures: vaaBytes.slice(6, 6 + v.signatures.length * 66),\r\n            attestations\r\n          }\r\n\r\n          Logger.info(`VAA gs=${v.guardian_set_index} #sig=${v.signatures.length} ts=${v.timestamp} nonce=${v.nonce} seq=${v.sequence} clev=${v.consistency_level} payload_size=${payload.length} #attestations=${numAttest}`)\r\n          this._hasData = true\r\n        } else {\r\n          Logger.error(`Bad Pyth VAA payload Id (${payloadId}). Expected 2`)\r\n        }\r\n      } else {\r\n        Logger.error(`Bad Pyth VAA version (${version}). Expected 2`)\r\n      }\r\n    } else {\r\n      Logger.error(`Bad VAA header (0x${header.toString(16)}). Expected 'P2WH'`)\r\n    }\r\n  }\r\n}\r\n"]}