{"version":3,"file":"IPriceFetcher.js","sourceRoot":"","sources":["../../backend/fetcher/IPriceFetcher.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * Pricecaster Service.\r\n *\r\n * Fetcher backend component.\r\n *\r\n * Copyright 2022 Wormhole Project Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { IStrategy } from '../strategy/strategy'\r\n\r\nexport interface IPriceFetcher {\r\n    start(): void\r\n    stop(): void\r\n    hasData(): boolean\r\n\r\n    /**\r\n     * Set price aggregation strategy for this fetcher.\r\n     * @param IStrategy The local price aggregation strategy\r\n     */\r\n    setStrategy(s: IStrategy): void\r\n\r\n    /**\r\n     * Get the current data.\r\n     */\r\n    queryData(id?: string): any | undefined\r\n}\r\n"]}