{"version":3,"file":"main.js","sourceRoot":"","sources":["../backend/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,mEAAoD;AAEpD,qCAA8B;AAC9B,4DAA8D;AAC9D,4DAA6C;AAC7C,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;AAEjC,CAAC,KAAK,IAAI,EAAE;IACV,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;IAC1B,KAAK,CAAC,KAAK,EAAE,CAAA;IACb,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;IAC1C,OAAO,CAAC,GAAG,CAAC,0EAA0E,CAAC,CAAA;IACvF,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;IAEzB,IAAI,QAAsB,CAAA;IAC1B,IAAI;QACF,MAAM,MAAM,CAAC,UAAU,CAAe,EAAE,MAAM,EAAE,sBAAsB,EAAE,CAAC,CAAA;QACzE,QAAQ,GAAG,MAAM,CAAC,GAAG,EAAgB,CAAA;QACrC,MAAM,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;KACtC;IAAC,OAAO,CAAM,EAAE;QACf,OAAO,CAAC,KAAK,CAAC,mCAAmC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAA;QACjE,IAAA,cAAI,EAAC,CAAC,CAAC,CAAA;KACR;IAED,MAAM,MAAM,GAAG,IAAI,qCAAoB,CAAC,QAAQ,CAAC,CAAA;IACjD,MAAM,MAAM,CAAC,KAAK,EAAE,CAAA;AACtB,CAAC,CAAC,EAAE,CAAA","sourcesContent":["/* eslint-disable func-call-spacing */\r\n/* eslint-disable no-unused-vars */\r\n/**\r\n * Pricecaster Service.\r\n *\r\n * Main program file.\r\n *\r\n * Copyright 2022 Wormhole Project Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport * as Config from '@randlabs/js-config-reader'\r\nimport { IAppSettings } from './common/settings'\r\nimport { exit } from 'process'\r\nimport { WormholeClientEngine } from './engine/WormholeEngine'\r\nimport * as Logger from '@randlabs/js-logger'\r\nconst charm = require('charm')();\r\n\r\n(async () => {\r\n  charm.pipe(process.stdout)\r\n  charm.reset()\r\n  charm.foreground('cyan').display('bright')\r\n  console.log('Pricecaster Service Backend  -- (c) 2022 Wormhole Project Contributors\\n')\r\n  charm.foreground('white')\r\n\r\n  let settings: IAppSettings\r\n  try {\r\n    await Config.initialize<IAppSettings>({ envVar: 'PRICECASTER_SETTINGS' })\r\n    settings = Config.get<IAppSettings>()\r\n    await Logger.initialize(settings.log)\r\n  } catch (e: any) {\r\n    console.error('Cannot initialize configuration: ' + e.toString())\r\n    exit(1)\r\n  }\r\n\r\n  const engine = new WormholeClientEngine(settings)\r\n  await engine.start()\r\n})()\r\n"]}